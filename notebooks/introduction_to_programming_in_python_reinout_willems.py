# -*- coding: utf-8 -*-
"""Introduction to Programming in Python: Reinout Willems

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1b6JaJrpsJM-5YHeB8jMLjKrdiCGSn6zc

# **Research question and short introduction**

*What is the relation between schooling and the vaccination rate in different Asian countries of the ASEAN Regional Forum (ARF)?*
1. What is the relation between schooling and the vaccination rate in some Asian ARF countries?
2. How do they compare to other Asian ARF countries?
3. What is the overall correlation of the Asian ARF countries?
4. How do the countries compare over the years?

ARF stands for ASEAN Regional Forum, and contains the following countries:
Australia, Bangladesh, Brunei Darussalam, Cambodia, Canada, China, Democratic People’s Republic of Korea, European Union, India, Indonesia, Japan, Lao PDR, Malaysia, Mongolia, Myanmar, New Zealand, Pakistan, Papua New Guinea, Philippines, Republic of Korea, Russia, Singapore, Sri Lanka, Thailand, Timor-Leste, United States, and Viet Nam.

Not all the countries in the ARF are Asian (i.e. USA and the EU, so all that countries will be excluded from the research): Bangladesh, Brunei Darussalam (Brunei), Cambodia, China, Democratic People’s Republic of Korea (North Korea), India, Indonesia, Japan, Lao PDR (Laos), Malaysia, Mongolia, Myanmar, Pakistan, Philippines, Republic of Korea (South Korea), Russia, Singapore, Sri Lanka, Thailand, Timor-Leste, and Viet Nam

# **Data collection for research**

**Loading the dataset**
- To load the dataset, pandas was imported:
"""

#Load the dataset
import pandas as pd
import numpy as np
import altair as alt
import ipywidgets as widgets
from ipywidgets import interact

FactorHealth = pd.read_csv('https://raw.githubusercontent.com/NHameleers/dtz2025-datasets/master/CountryHealthFactors.csv')
FactorHealth.head(n=17)

FactorHealth = FactorHealth.rename(columns=str.strip)

"""For determining the average vaccination rate, a new column 'Average Vaccination Rate' was calculated with the average of the sum of 'Hepatitis B', 'Polio', and 'Diphteria'."""

FactorHealth['Average Vaccination Rate'] = (FactorHealth['Hepatitis B'] + FactorHealth['Polio'] + FactorHealth['Diphtheria']) / 3
FactorHealth

"""**Making a new dataset including values for the research**
- To only include the Asian ARF countries, a list called 'Asian_ARF countries was made with only the Asian ARF countries'
- Also, all the columns were put in a list called 'research columns'
- The new table included all these research columns, and from the countries only the Asian ARF countries while using an '.isin' function
"""

Asian_ARFcountries = ['Bangladesh', 'Brunei Darussalam', 'China', 'Cambodia', "Democratic People's Republic of Korea", 'India', 'Indonesia', 'Japan', "Lao People's Democratic Republic", 'Malaysia', 'Mongolia', 'Myanmar', 'Pakistan',
'Philippines', 'Republic of Korea', 'Russian Federation', 'Singapore', 'Sri Lanka', 'Thailand', 'Timor-Leste', 'Viet Nam']

ResearchColumns = ['Country', 'Year', 'Hepatitis B', 'Polio', 'Diphtheria', 'Schooling', 'Average Vaccination Rate']

FactorHealth1 = FactorHealth[FactorHealth['Country'].isin(Asian_ARFcountries)][ResearchColumns]
FactorHealth1

"""# **Data cleaning**

**Data description**
- Hepatitis B and the Average vaccination rate have the same amount of missing values
- 32 missing values in countries for schooling, since every country has 16 different years of data, it could be only 2 countries containing the missing values
"""

FactorHealth1.describe()

"""**Schooling**
- For charts, altair was imported
- Looking at the countries in schooling, North Korea and South Korea can't be found
"""

alt.Chart(FactorHealth1).mark_point().encode(
    x ='Year',
    y ='Schooling',
    color = 'Country'
)

"""**Hepatitis B**
- Japan, North Korea and South Korea have no data values (the last two because of missing values in schooling)
- Some values of Hepatits B below/around 10, probably, the decimal was placed wrongly over there
"""

alt.Chart(FactorHealth1).mark_point().encode(
    x ='Schooling',
    y ='Hepatitis B',
    color= 'Country'
)

"""**Polio**
- North Korea and South Korea are missing (because of no values in Schooling)
- Few values of Polio are below/around 10, probably because of a wrongly placed decimal
"""

alt.Chart(FactorHealth1).mark_point().encode(
    x ='Schooling',
    y ='Polio',
    color = 'Country'
)

"""**Diphteria**
- North Korea and South Korea are missing (because of missing values in schooling)
- Some values of Diphtheria below/around 10, the decimal is probably placed wrongly
"""

alt.Chart(FactorHealth1).mark_point().encode(
    x ='Schooling',
    y ='Diphtheria',
    color = 'Country'
)

"""**Checking for typos in countries' names**
- Checking the unique country values in the data file
- Every country only has one unique value, so there are no typos
"""

FactorHealth1["Country"].unique()

"""**Resolving the issues in missing datas**
- Making a new data file
  - Minimum value of Hepatitis B to 12
  - Minimum value of Polio to 10
  - Minimum value of Diphtheria to 10
  - Minimum value of schooling to 2
"""

FactorHealth2 = FactorHealth1[(FactorHealth1['Hepatitis B'] >= 12.0) & (FactorHealth1['Diphtheria'] >= 10.0) & (FactorHealth1['Polio'] >= 10.0) & (FactorHealth1['Schooling'] >= 2.0)]
FactorHealth2

"""# **Results**

**Determining correlation of every country**
- Function of correlation of every country using the '.corr()' function
- Dropdown of a country made to compare them with each other
- Also, 'import interact,fixed' is used because 'df = fixed(df)'
- Function copied two times for comparing two graphs with each other

**Visualization of every correlation**
- Graph with regression line with dropdown for every country
- Function copied two times for comparing two graphs with each other
"""

from ipywidgets import interact, fixed

def Country_data(Country, FactorHealth2):
  return FactorHealth2.loc[FactorHealth2['Country'] == Country]

def correlation(Country, FactorHealth2):
  Countries_data = Country_data(Country, FactorHealth2)
  CorrCountry = Countries_data[['Schooling', 'Average Vaccination Rate']].corr()
  return CorrCountry

def interact_visualization3(Country, FactorHealth2):
  Visualization = correlation(Country, FactorHealth2)
  display(Visualization)

interact(interact_visualization3,
         Country=FactorHealth2['Country'].unique(),
         FactorHealth2=fixed(FactorHealth2));

from ipywidgets import interact, fixed

def Country_data(Country, FactorHealth2):
  return FactorHealth2.loc[FactorHealth2['Country'] == Country]

def correlation(Country, FactorHealth2):
  Countries_data = Country_data(Country, FactorHealth2)
  CorrCountry = Countries_data[['Schooling', 'Average Vaccination Rate']].corr()
  return CorrCountry

def interact_visualization3(Country, FactorHealth2):
  Visualization = correlation(Country, FactorHealth2)
  display(Visualization)

interact(interact_visualization3,
         Country=FactorHealth2['Country'].unique(),
         FactorHealth2=fixed(FactorHealth2));

#Correlation of each country compared to other countries
from ipywidgets import interact, fixed

def Country_data(Country, FactorHealth2):
  return FactorHealth2.loc[FactorHealth2['Country'] == Country]

def interact_visualization(Country, FactorHealth2):
  Visualization = Country_data(Country, FactorHealth2)
  ChartPoint = alt.Chart(Visualization).mark_point().encode(x = 'Schooling', y = 'Average Vaccination Rate')
  ChartTotal = ChartPoint + ChartPoint.transform_regression('Schooling', 'Average Vaccination Rate').mark_line()
  display(ChartTotal)

interact(interact_visualization,
         Country=FactorHealth2['Country'].unique(),
         FactorHealth2=fixed(FactorHealth2));
#Vietnam (low) and China (high)
#Laos (high) and Cambodia (low)
#Singapore (low) and India (high)

def Country_data(Country, FactorHealth2):
  return FactorHealth2.loc[FactorHealth2['Country'] == Country]

def interact_visualization(Country, FactorHealth2):
  Visualization = Country_data(Country, FactorHealth2)
  ChartPoint = alt.Chart(Visualization).mark_point().encode(x = 'Schooling', y = 'Average Vaccination Rate')
  ChartTotal = ChartPoint + ChartPoint.transform_regression('Schooling', 'Average Vaccination Rate').mark_line()
  display(ChartTotal)

interact(interact_visualization,
         Country=FactorHealth2['Country'].unique(),
         FactorHealth2=fixed(FactorHealth2));

"""**Results of country comparisons**
- The correlation between average vaccination rate and schooling varies a lot per country
  - High correlations: China, Laos and India
  - Low correlations: Vietnam, Cambodia and Singapore

**Overall correlation between Average Vaccination Rate and Schooling**
- New datafile made with the mean of Average Vaccination Rate and Schooling for every country
- Correlation determined using the '.corr()' function
- Visualization in a scatterplot with regression line
"""

#Comparing the mean average vaccination rate of every country
FactorHealth3 = FactorHealth2.groupby('Country')['Schooling', 'Average Vaccination Rate'].mean()
FactorHealth3.loc[:, ['Schooling', 'Average Vaccination Rate']].corr()

#Comparing the mean average vaccination rate of every country
chart = alt.Chart(FactorHealth3).mark_point().encode(
    x = 'Schooling',
    y = 'Average Vaccination Rate'
)
chart + chart.transform_regression('Schooling', 'Average Vaccination Rate').mark_line()

"""**Results overall comparison**
- A moderate correlation between the average vaccination rate and schooling

**Comparison of countries over the years**
- Same as for the previous interactive graphs, only 'country' is made a color and 'year' is made a dropdown
"""

def Year_data(Year, FactorHealth2):
  return FactorHealth2.loc[FactorHealth2['Year'] == Year]


def interact_visualization1(Year, FactorHealth2):
  Visualization1 = Year_data(Year, FactorHealth2)
  ChartTotal1 = alt.Chart(Visualization1).mark_point().encode(x = 'Schooling', y = 'Average Vaccination Rate', color = 'Country')
  display(ChartTotal1)

interact(interact_visualization1, Year = FactorHealth2['Year'].unique(), FactorHealth2=fixed(FactorHealth2));

"""**Results of countries over the years**
- Also varies a lot per country
- Examples
  - Malaysia always had high schooling and a high vaccination rate
  - In India, Schooling and Average Vaccination Rate increased over the years

# **Conclusion**

- Correlation between Average Vaccination Rate and Schooling varies per country
  - Same case when comparing countries over the years
- There's a moderate correlation between the Average Vaccination Rate and Schooling overall
"""